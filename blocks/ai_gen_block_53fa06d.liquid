{% doc %}
  @prompt
    Create a custom Shopify section to display blog posts in a fully responsive and mobile-optimized layout.
    
    âœ… Core Features:
    Display blog posts from a selected blog.
    
    Option to choose the number of blog posts to show (1 to 6).
    
    Selectable number of columns per row:
    
    Desktop: 1 to 6 columns.
    
    Mobile: 1 to 6 columns (must be fully optimized for mobile view).
    
    Include carousel (slider) functionality for both:
    
    Desktop: optional with arrow navigation.
    
    Mobile: required, with full touch swipe support.
    
    ðŸ”§ Optional Display Elements (toggle on/off in settings):
    Blog post title
    
    Author name
    
    Excerpt or summary
    
    Tags
    
    Publish date
    
    "View All" button linking to the main blog or selected blog category
    
    ðŸ“± Mobile Optimization (MANDATORY):
    Layout must be clean, readable, and fast-loading on mobile.
    
    Blog cards should stack or scroll smoothly with touch-friendly carousel behavior.
    
    Lazy-load all images for performance.
    
    Ensure tap targets and spacing meet mobile usability standards.
    
    ðŸ’¡ Other Requirements:
    Lightweight and SEO-friendly structure.
    
    Use responsive image sizes and semantic HTML.
    
    Ensure compatibility with all modern browsers and mobile devices.

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-blog-posts-{{ ai_gen_id }} {
    width: 100%;
    padding: {{ block.settings.section_padding_top }}px 0 {{ block.settings.section_padding_bottom }}px;
  }

  .ai-blog-posts-container-{{ ai_gen_id }} {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
  }

  .ai-blog-posts-header-{{ ai_gen_id }} {
    text-align: center;
    margin-bottom: 40px;
  }

  .ai-blog-posts-title-{{ ai_gen_id }} {
    font-size: {{ block.settings.heading_size }}px;
    color: {{ block.settings.heading_color }};
    margin: 0 0 16px;}

  .ai-blog-posts-subtitle-{{ ai_gen_id }} {
    font-size: {{ block.settings.subheading_size }}px;
    color: {{ block.settings.text_color }};
    margin: 0;
  }

  .ai-blog-posts-wrapper-{{ ai_gen_id }} {
    position: relative;
  }

  .ai-blog-posts-grid-{{ ai_gen_id }} {
    display: grid;
    grid-template-columns: repeat({{ block.settings.columns_desktop }}, 1fr);
    gap: {{ block.settings.grid_gap }}px;
    transition: transform 0.3s ease;
  }

  .ai-blog-posts-grid-{{ ai_gen_id }}.carousel-enabled {
    display: flex;
    overflow-x: auto;
    scroll-snap-type: x mandatory;
    scrollbar-width: none;
    -ms-overflow-style: none;
    gap: {{ block.settings.grid_gap }}px;
  }

  .ai-blog-posts-grid-{{ ai_gen_id }}.carousel-enabled::-webkit-scrollbar {
    display: none;
  }

  .ai-blog-post-card-{{ ai_gen_id }} {
    background: {{ block.settings.card_background }};
    border-radius: {{ block.settings.card_border_radius }}px;
    overflow: hidden;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease, box-shadow 0.3s ease;display: flex;
    flex-direction: column;
  }

  .ai-blog-posts-grid-{{ ai_gen_id }}.carousel-enabled .ai-blog-post-card-{{ ai_gen_id }} {
    flex: 0 0 calc((100% - ({{ block.settings.columns_desktop | minus: 1 }} * {{ block.settings.grid_gap }}px)) / {{ block.settings.columns_desktop }});
    scroll-snap-align: start;
  }

  .ai-blog-post-card-{{ ai_gen_id }}:hover {
    transform: translateY(-4px);
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);
  }

  .ai-blog-post-image-{{ ai_gen_id }} {
    width: 100%;
    height: {{ block.settings.image_height }}px;
    overflow: hidden;
    position: relative;
  }

  .ai-blog-post-image-{{ ai_gen_id }} img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .ai-blog-post-image-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    background-color: #f4f4f4;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .ai-blog-post-image-placeholder-{{ ai_gen_id }} svg {
    width: 60px;
    height: 60px;
    opacity: 0.5;
  }

  .ai-blog-post-content-{{ ai_gen_id }} {
    padding: {{ block.settings.card_padding }}px;
    flex-grow: 1;
    display: flex;
    flex-direction: column;
  }

  .ai-blog-post-meta-{{ ai_gen_id }} {
    display: flex;
    flex-wrap: wrap;
    gap: 12px;
    margin-bottom: 12px;
    font-size: 12px;
    color: {{ block.settings.meta_color }};
  }

  .ai-blog-post-date-{{ ai_gen_id }},
  .ai-blog-post-author-{{ ai_gen_id }} {
    display: flex;
    align-items: center;
    gap: 4px;
  }

  .ai-blog-post-title-{{ ai_gen_id }} {
    font-size: {{ block.settings.card_title_size }}px;
    color: {{ block.settings.title_color }};
    margin: 00 12px;line-height: 1.4;
    text-decoration: none;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .ai-blog-post-title-{{ ai_gen_id }}:hover {
    color: {{ block.settings.title_hover_color }};
  }

  .ai-blog-post-excerpt-{{ ai_gen_id }} {
    color: {{ block.settings.text_color }};
    font-size: {{ block.settings.excerpt_size }}px;
    line-height: 1.5;
    margin-bottom: 16px;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;flex-grow: 1;
  }

  .ai-blog-post-tags-{{ ai_gen_id }} {
    display: flex;
    flex-wrap: wrap;
    gap: 6px;
    margin-bottom: 16px;
  }

  .ai-blog-post-tag-{{ ai_gen_id }} {
    background: {{ block.settings.tag_background }};
    color: {{ block.settings.tag_color }};
    padding: 4px 8px;
    border-radius: 12px;
    font-size: 11px;
    text-decoration: none;
  }

  .ai-blog-post-tag-{{ ai_gen_id }}:hover {
    background: {{ block.settings.tag_hover_background }};
  }

  .ai-blog-carousel-nav-{{ ai_gen_id }} {
    display: flex;
    justify-content: center;
    gap: 12px;
    margin-top: 24px;
  }

  .ai-blog-carousel-btn-{{ ai_gen_id }} {
    width: 44px;
    height: 44px;
    border-radius: 50%;
    background: {{ block.settings.nav_button_color }};
    border: none;
    color: {{ block.settings.nav_button_text_color }};
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }

  .ai-blog-carousel-btn-{{ ai_gen_id }}:hover {
    background: {{ block.settings.nav_button_hover_color }};
    transform: scale(1.05);
  }

  .ai-blog-carousel-btn-{{ ai_gen_id }}:disabled {
    opacity: 0.5;
    cursor: not-allowed;transform: none;
  }

  .ai-blog-view-all-{{ ai_gen_id }} {
    text-align: center;
    margin-top: 40px;
  }

  .ai-blog-view-all-btn-{{ ai_gen_id }} {
    display: inline-block;
    padding: 12px 24px;
    background: {{ block.settings.view_all_bg }};
    color: {{ block.settings.view_all_color }};
    text-decoration: none;
    border-radius: {{ block.settings.view_all_border_radius }}px;
    font-weight: 500;
    transition: all 0.3s ease;
  }

  .ai-blog-view-all-btn-{{ ai_gen_id }}:hover {
    background: {{ block.settings.view_all_hover_bg }};
    color: {{ block.settings.view_all_hover_color }};
  }

  @media screen and (max-width: 768px) {
    .ai-blog-posts-container-{{ ai_gen_id }} {
      padding: 0 16px;
    }

    .ai-blog-posts-grid-{{ ai_gen_id }} {
      grid-template-columns: repeat({{ block.settings.columns_mobile }}, 1fr);
      gap: {{ block.settings.grid_gap_mobile }}px;
    }

    .ai-blog-posts-grid-{{ ai_gen_id }}.carousel-enabled {
      gap: {{ block.settings.grid_gap_mobile }}px;
    }

    .ai-blog-posts-grid-{{ ai_gen_id }}.carousel-enabled .ai-blog-post-card-{{ ai_gen_id }} {
      flex: 0 0 calc((100% - ({{ block.settings.columns_mobile | minus: 1 }} * {{ block.settings.grid_gap_mobile }}px)) / {{ block.settings.columns_mobile }});
    }

    .ai-blog-post-content-{{ ai_gen_id }} {
      padding: {{ block.settings.card_padding_mobile }}px;
    }

    .ai-blog-post-title-{{ ai_gen_id }} {
      font-size: {{ block.settings.card_title_size_mobile }}px;
    }

    .ai-blog-post-excerpt-{{ ai_gen_id }} {
      font-size: {{ block.settings.excerpt_size_mobile }}px;
    }

    .ai-blog-carousel-nav-{{ ai_gen_id }} {
      {% if block.settings.enable_mobile_carousel %}
        display: flex;
      {% else %}
        display: none;
      {% endif %}
    }
  }
{% endstyle %}

<blog-posts-{{ ai_gen_id }}
  class="ai-blog-posts-{{ ai_gen_id }}"
  data-desktop-carousel="{{ block.settings.enable_desktop_carousel }}"
  data-mobile-carousel="{{ block.settings.enable_mobile_carousel }}"
  {{ block.shopify_attributes }}
>
  <div class="ai-blog-posts-container-{{ ai_gen_id }}">
    {% if block.settings.heading != blank or block.settings.subheading != blank %}
      <div class="ai-blog-posts-header-{{ ai_gen_id }}">
        {% if block.settings.heading != blank %}
          <h2 class="ai-blog-posts-title-{{ ai_gen_id }}">{{ block.settings.heading }}</h2>
        {% endif %}
        {% if block.settings.subheading != blank %}
          <div class="ai-blog-posts-subtitle-{{ ai_gen_id }}">{{ block.settings.subheading }}</div>
        {% endif %}
      </div>
    {% endif %}<div class="ai-blog-posts-wrapper-{{ ai_gen_id }}"><div class="ai-blog-posts-grid-{{ ai_gen_id }}" data-grid>
        {% if block.settings.blog != blank %}
          {% for article in block.settings.blog.articles limit: block.settings.posts_to_show %}
            <article class="ai-blog-post-card-{{ ai_gen_id }}">
              <div class="ai-blog-post-image-{{ ai_gen_id }}">
                {% if article.image %}
                  <img
                    src="{{ article.image | image_url: width: 600}}"
                    alt="{{ article.image.alt | escape }}"
                    width="600"
                    height="{{ block.settings.image_height }}"
                    loading="lazy"
                  >
                {% else %}
                  <div class="ai-blog-post-image-placeholder-{{ ai_gen_id }}">
                    {{ 'image' | placeholder_svg_tag }}
                  </div>
                {% endif %}
              </div>

              <div class="ai-blog-post-content-{{ ai_gen_id }}">
                {% if block.settings.show_date or block.settings.show_author %}
                  <div class="ai-blog-post-meta-{{ ai_gen_id }}">
                    {% if block.settings.show_date %}
                      <div class="ai-blog-post-date-{{ ai_gen_id }}">
                        <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                          <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
                          <line x1="16" y1="2" x2="16" y2="6"></line>
                          <line x1="8" y1="2" x2="8" y2="6"></line>
                          <line x1="3" y1="10" x2="21" y2="10"></line>
                        </svg>
                        {{ article.published_at | date: '%B %d, %Y' }}
                      </div>
                    {% endif %}
                    {% if block.settings.show_author %}
                      <div class="ai-blog-post-author-{{ ai_gen_id }}">
                        <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                          <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path>
                          <circle cx="12" cy="7" r="4"></circle>
                        </svg>
                        {{ article.author }}
                      </div>
                    {% endif %}
                  </div>
                {% endif %}

                <a href="{{ article.url }}" class="ai-blog-post-title-{{ ai_gen_id }}">
                  {{ article.title }}
                </a>

                {% if block.settings.show_excerpt and article.excerpt != blank %}
                  <div class="ai-blog-post-excerpt-{{ ai_gen_id }}">
                    {{ article.excerpt | strip_html | truncate: 120 }}
                  </div>
                {% endif %}

                {% if block.settings.show_tags and article.tags.size > 0 %}
                  <div class="ai-blog-post-tags-{{ ai_gen_id }}">
                    {% for tag in article.tags limit: 3 %}
                      <a href="{{ blog.url }}/tagged/{{ tag | handle }}" class="ai-blog-post-tag-{{ ai_gen_id }}">
                        {{ tag }}
                      </a>
                    {% endfor %}
                  </div>
                {% endif %}
              </div>
            </article>
          {% endfor %}
        {% else %}
          {% for i in (1..block.settings.posts_to_show) %}
            <article class="ai-blog-post-card-{{ ai_gen_id }}">
              <div class="ai-blog-post-image-{{ ai_gen_id }}"><div class="ai-blog-post-image-placeholder-{{ ai_gen_id }}">
                  {{ 'image' | placeholder_svg_tag }}
                </div>
              </div>
              <div class="ai-blog-post-content-{{ ai_gen_id }}">
                <div class="ai-blog-post-meta-{{ ai_gen_id }}">
                <div class="ai-blog-post-date-{{ ai_gen_id }}">
                    <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                      <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
                      <line x1="16" y1="2" x2="16" y2="6"></line>
                      <line x1="8" y1="2" x2="8" y2="6"></line>
                      <line x1="3" y1="10" x2="21" y2="10"></line>
                    </svg>
                    January {{ i }}, 2024
                  </div>
                  <div class="ai-blog-post-author-{{ ai_gen_id }}">
                    <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                      <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path>
                      <circle cx="12" cy="7" r="4"></circle>
                    </svg>
                    Author Name
                  </div>
                </div>
                <a href="#" class="ai-blog-post-title-{{ ai_gen_id }}">
                  Sample Blog Post Title {{ i }}
                </a>
                <div class="ai-blog-post-excerpt-{{ ai_gen_id }}">
                  This is a sample excerpt for blog post {{ i }}. It provides a brief overview of the article content.
                </div>
                <div class="ai-blog-post-tags-{{ ai_gen_id }}">
                  <a href="#" class="ai-blog-post-tag-{{ ai_gen_id }}">Tag {{ i }}</a><a href="#" class="ai-blog-post-tag-{{ ai_gen_id }}">Sample</a>
                </div>
              </div>
            </article>
          {% endfor %}
        {% endif %}
      </div><div class="ai-blog-carousel-nav-{{ ai_gen_id }}" data-nav style="display: none;">
        <button class="ai-blog-carousel-btn-{{ ai_gen_id }}" data-prev aria-label="Previous posts">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <polyline points="15,18 9,12 15,6"></polyline>
          </svg>
        </button>
        <button class="ai-blog-carousel-btn-{{ ai_gen_id }}" data-next aria-label="Next posts">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <polyline points="9,6 15,12 9,18"></polyline>
          </svg>
        </button>
      </div>
    </div>

    {% if block.settings.show_view_all and block.settings.blog != blank %}
      <div class="ai-blog-view-all-{{ ai_gen_id }}">
        <a href="{{ block.settings.blog.url }}" class="ai-blog-view-all-btn-{{ ai_gen_id }}">
          {{ block.settings.view_all_text }}
        </a>
      </div>
    {% endif %}
  </div>
</blog-posts-{{ ai_gen_id }}>

<script>
  (function() {
    class BlogPosts{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.grid = null;
        this.navButtons = null;
        this.prevBtn = null;
        this.nextBtn = null;
        this.currentIndex = 0;
        this.itemsPerView = 1;
        this.totalItems = 0;
        this.isCarouselEnabled = false;
        this.touchStartX = 0;
        this.touchEndX = 0;}

      connectedCallback() {
        this.grid = this.querySelector('[data-grid]');
        this.navButtons = this.querySelector('[data-nav]');
        this.prevBtn = this.querySelector('[data-prev]');
        this.nextBtn = this.querySelector('[data-next]');
        
        this.setupCarousel();
        this.setupEventListeners();
        this.updateNavigation();
        
        window.addEventListener('resize', () => this.handleResize());
      }

      setupCarousel() {
        const desktopCarousel = this.dataset.desktopCarousel === 'true';
        const mobileCarousel = this.dataset.mobileCarousel === 'true';
        const isMobile = window.innerWidth <= 768;
        
        this.isCarouselEnabled = (isMobile && mobileCarousel) || (!isMobile && desktopCarousel);
        
        if (this.isCarouselEnabled) {
          this.grid.classList.add('carousel-enabled');
          this.navButtons.style.display = 'flex';
          this.setupCarouselBehavior();
        } else {
          this.grid.classList.remove('carousel-enabled');
          this.navButtons.style.display = 'none';
        }
        this.calculateItemsPerView();this.totalItems = this.grid.children.length;
      }

      calculateItemsPerView() {
        const isMobile = window.innerWidth <= 768;
        if (isMobile) {
          this.itemsPerView = parseInt('{{ block.settings.columns_mobile }}');
        } else {
          this.itemsPerView = parseInt('{{ block.settings.columns_desktop }}');
        }
      }

      setupCarouselBehavior() {
        if (!this.isCarouselEnabled) return;
        
        this.grid.addEventListener('touchstart', (e) => {
          this.touchStartX = e.changedTouches[0].screenX;
        });

        this.grid.addEventListener('touchend', (e) => {
          this.touchEndX = e.changedTouches[0].screenX;
          this.handleSwipe();
        });

        this.grid.addEventListener('scroll', () => {
          this.updateCurrentIndex();
        });
      }

      handleSwipe() {
        const swipeThreshold = 50;
        const diff = this.touchStartX - this.touchEndX;
        
        if (Math.abs(diff) > swipeThreshold) {
          if (diff > 0) {
            this.nextSlide();
          } else {
            this.prevSlide();
          }
        }
      }

      updateCurrentIndex() {
        if (!this.isCarouselEnabled) return;
        
        const scrollLeft = this.grid.scrollLeft;
        const itemWidth = this.grid.children[0].offsetWidth;
        const gap = parseInt('{{ block.settings.grid_gap }}');
        
        this.currentIndex = Math.round(scrollLeft / (itemWidth + gap));this.updateNavigation();
      }

      setupEventListeners() {
        if (this.prevBtn) {
          this.prevBtn.addEventListener('click', () => this.prevSlide());
        }
        
        if (this.nextBtn) {
          this.nextBtn.addEventListener('click', () => this.nextSlide());
        }}

      prevSlide() {
        if (!this.isCarouselEnabled || this.currentIndex <= 0) return;
        
        this.currentIndex = Math.max(0, this.currentIndex - 1);
        this.scrollToIndex(this.currentIndex);
      }

      nextSlide() {
        if (!this.isCarouselEnabled) return;
        
        const maxIndex = Math.max(0, this.totalItems - this.itemsPerView);
        if (this.currentIndex >= maxIndex) return;
        
        this.currentIndex = Math.min(maxIndex, this.currentIndex + 1);
        this.scrollToIndex(this.currentIndex);
      }

      scrollToIndex(index) {
        if (!this.isCarouselEnabled) return;
        
        const itemWidth = this.grid.children[0].offsetWidth;
        const gap = parseInt('{{ block.settings.grid_gap }}');
        const scrollLeft = index * (itemWidth + gap);
        
        this.grid.scrollTo({
          left: scrollLeft,
          behavior: 'smooth'
        });
      }

      updateNavigation() {
        if (!this.isCarouselEnabled || !this.prevBtn || !this.nextBtn) return;
        
        const maxIndex = Math.max(0, this.totalItems - this.itemsPerView);
        this.prevBtn.disabled = this.currentIndex <= 0;
        this.nextBtn.disabled = this.currentIndex >= maxIndex;
      }

      handleResize() {
        this.setupCarousel();
        this.updateNavigation();
      }
    }

    customElements.define('blog-posts-{{ ai_gen_id }}', BlogPosts{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Blog Posts",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "blog",
      "id": "blog",
      "label": "Blog"
    },
    {
      "type": "range",
      "id": "posts_to_show",
      "min": 1,
      "max": 6,
      "step": 1,
      "label": "Posts to show",
      "default": 3
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Latest Blog Posts"
    },
    {
      "type": "textarea",
      "id": "subheading",
      "label": "Subheading",
      "default": "Stay updated with our latest news and insights"
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 6,
      "step": 1,
      "label": "Columns on desktop",
      "default": 3
    },
    {
      "type": "range",
      "id": "columns_mobile",
      "min": 1,
      "max": 6,
      "step": 1,
      "label": "Columns on mobile",
      "default": 1
    },
    {
      "type": "range",
      "id": "grid_gap",
      "min": 10,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Grid gap (desktop)",
      "default": 24
    },
    {
      "type": "range",
      "id": "grid_gap_mobile",
      "min": 10,
      "max": 30,
      "step": 2,
      "unit": "px",
      "label": "Grid gap (mobile)",
      "default": 16
    },
    {
      "type": "header",
      "content": "Carousel"
    },
    {
      "type": "checkbox",
      "id": "enable_desktop_carousel",
      "label": "Enable desktop carousel",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "enable_mobile_carousel",
      "label": "Enable mobile carousel",
      "default": true
    },
    {
      "type": "header",
      "content": "Display Options"
    },
    {
      "type": "checkbox",
      "id": "show_date",
      "label": "Show publish date",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_author",
      "label": "Show author",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_excerpt",
      "label": "Show excerpt",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_tags",
      "label": "Show tags",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_view_all",
      "label": "Show view all button",
      "default": true
    },
    {
      "type": "text",
      "id": "view_all_text",
      "label": "View all button text",
      "default": "View All Posts"
    },
    {
      "type": "header",
      "content": "Card Style"
    },
    {
      "type": "range",
      "id": "image_height",
      "min": 150,
      "max": 300,
      "step": 10,
      "unit": "px",
      "label": "Image height",
      "default": 200
    },
    {
      "type": "range",
      "id": "card_padding",
      "min": 16,
      "max": 32,
      "step": 2,
      "unit": "px",
      "label": "Card padding (desktop)",
      "default": 20
    },
    {
      "type": "range",
      "id": "card_padding_mobile",
      "min": 12,
      "max": 24,
      "step": 2,
      "unit": "px",
      "label": "Card padding (mobile)",
      "default": 16
    },
    {
      "type": "range",
      "id": "card_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Card border radius",
      "default": 8
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "range",
      "id": "heading_size",
      "min": 20,
      "max": 48,
      "step": 2,
      "unit": "px",
      "label": "Section heading size",
      "default": 32
    },
    {
      "type": "range",
      "id": "subheading_size",
      "min": 14,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Section subheading size",
      "default": 16
    },
    {
      "type": "range",
      "id": "card_title_size",
      "min": 16,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Card title size (desktop)",
      "default": 18
    },
    {
      "type": "range",
      "id": "card_title_size_mobile",
      "min": 14,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Card title size (mobile)",
      "default": 16
    },
    {
      "type": "range",
      "id": "excerpt_size",
      "min": 12,
      "max": 16,
      "step": 1,
      "unit": "px",
      "label": "Excerpt size (desktop)",
      "default": 14
    },
    {
      "type": "range",
      "id": "excerpt_size_mobile",
      "min": 12,
      "max": 16,
      "step": 1,
      "unit": "px",
      "label": "Excerpt size (mobile)",
      "default": 13
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "Section heading color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#666666"
    },
    {
      "type": "color",
      "id": "card_background",
      "label": "Card background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "title_color",
      "label": "Card title color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "title_hover_color",
      "label": "Card title hover color",
      "default": "#666666"
    },
    {
      "type": "color",
      "id": "meta_color",
      "label": "Meta text color",
      "default": "#999999"
    },
    {
      "type": "color",
      "id": "tag_background",
      "label": "Tag background",
      "default": "#f0f0f0"
    },
    {
      "type": "color",
      "id": "tag_color",
      "label": "Tag text color",
      "default": "#666666"
    },
    {
      "type": "color",
      "id": "tag_hover_background",
      "label": "Tag hover background",
      "default": "#e0e0e0"
    },
    {
      "type": "color",
      "id": "nav_button_color",
      "label": "Navigation button color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "nav_button_text_color",
      "label": "Navigation button text color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "nav_button_hover_color",
      "label": "Navigation button hover color",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "view_all_bg",
      "label": "View all button background",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "view_all_color",
      "label": "View all button text color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "view_all_hover_bg",
      "label": "View all button hover background",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "view_all_hover_color",
      "label": "View all button hover text color",
      "default": "#ffffff"
    },
    {
      "type": "range",
      "id": "view_all_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "View all button border radius",
      "default": 4
    },
    {
      "type": "header",
      "content": "Spacing"
    },
    {
      "type": "range",
      "id": "section_padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Section padding top",
      "default": 60
    },
    {
      "type": "range",
      "id": "section_padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Section padding bottom",
      "default": 60
    }
  ],
  "presets": [
    {
      "name": "Blog Posts"
    }
  ]
}
{% endschema %}